#ifndef _SHOCO_INTERNAL
#error This header file is only to be included by 'shoco.c'.
#endif
#pragma once
/*
This file was generated by 'generate_compressor_model.py'
so don't edit this by hand. Also, do not include this file
anywhere. It is internal to 'shoco.c'. Include 'shoco.h'
if you want to use shoco in your project.
*/

#define MIN_CHR 32
#define MAX_CHR 122

static const char chrs_by_chr_id[32] = {
  'e', 't', '_', 'o', 'r', 'a', 'i', 'n', 'l', 's', 'c', 'S', 'E', 'd', 'p', 'N', '1', 'u', 'I', 'C', 'm', 'b', 'h', 'P', 'g', 'y', ' ', '[', 'v', '-', 'k', 'T'
};

static const int8_t chr_ids_by_chr[256] = {
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, -1, 12, -1, -1, -1, 18, -1, -1, -1, -1, 15, -1, 23, -1, -1, 11, 31, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, 2, -1, 5, 21, 10, 13, 0, -1, 24, 22, 6, -1, 30, 8, 20, 7, 3, 14, -1, 4, 9, 1, 17, 28, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
};

static const int8_t successor_ids_by_chr_id_and_chr_id[32][32] = {
  {-1, 3, -1, -1, 0, 7, -1, 2, 4, 1, 5, -1, 10, 6, -1, -1, -1, -1, 11, -1, 9, 13, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1},
  {1, 12, -1, 4, 2, 3, 0, -1, -1, 7, -1, 14, 9, -1, -1, -1, -1, 15, 11, 13, -1, -1, 5, -1, -1, 6, 10, -1, -1, -1, -1, -1},
  {-1, 14, 0, -1, -1, -1, 6, -1, -1, 11, 8, 10, 5, 9, 13, -1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, 9, -1, 13, 1, 14, -1, 0, 3, 12, 2, -1, -1, 7, 5, -1, -1, 4, -1, -1, 6, -1, -1, -1, 15, 10, -1, -1, -1, -1, 8, -1},
  {0, 7, 5, 1, 12, 2, 3, -1, -1, 10, 11, -1, 14, 13, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, 8, 6, -1, 15, -1, -1, -1},
  {-1, 0, -1, -1, 2, -1, 7, 3, 1, 4, 5, 15, -1, 11, 9, -1, -1, 14, -1, -1, 10, 8, -1, -1, 6, 12, -1, -1, 13, -1, -1, -1},
  {3, 2, -1, 1, 10, 13, -1, 0, 6, 5, 4, -1, -1, 7, 14, -1, -1, -1, -1, -1, 8, 15, -1, -1, 9, -1, -1, -1, 11, -1, -1, -1},
  {4, 0, -1, -1, -1, 5, 8, 12, -1, 3, 6, -1, 13, 2, -1, -1, -1, -1, 14, 15, -1, -1, -1, -1, 1, -1, 10, -1, 7, -1, -1, -1},
  {0, 7, -1, 1, -1, 4, 3, -1, 2, 14, -1, 13, 11, 8, 5, -1, -1, 6, 9, -1, -1, -1, -1, -1, -1, 12, 15, -1, 10, -1, -1, -1},
  {1, 0, -1, 10, -1, 6, 3, -1, -1, 2, 9, -1, 11, -1, 5, -1, -1, 13, 7, -1, -1, -1, 4, -1, -1, -1, 15, -1, -1, -1, -1, -1},
  {3, 0, 11, 2, 6, 4, 12, -1, 7, 13, 8, -1, 9, -1, -1, 14, -1, 10, 15, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, 1, -1},
  {2, 1, 0, -1, -1, -1, 6, -1, -1, -1, 12, 15, -1, -1, -1, -1, 3, 14, -1, 5, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, -1, 13, -1, 15, -1, -1, 6, 10, -1, -1, 7, 0, -1, -1, 1, 8, -1, -1, -1, 14, -1, -1, 4, -1, -1, -1, -1, 2, -1, -1, -1},
  {0, -1, 3, 15, -1, 2, 1, -1, 4, -1, -1, 5, 6, 7, -1, -1, -1, -1, 10, 8, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 2, 11, 3, 7, 5, 13, -1, 1, 14, -1, -1, 15, 9, 6, -1, -1, 8, 10, -1, -1, -1, 12, -1, -1, 4, -1, -1, -1, -1, -1, -1},
  {9, -1, -1, 4, -1, 6, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, 2, 15, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, 11},
  {-1, -1, 3, -1, -1, -1, -1, -1, -1, -1, 12, 13, 10, -1, -1, -1, 0, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1},
  {0, 1, -1, -1, 3, 11, 13, 2, 4, 6, 8, -1, -1, 10, 5, -1, -1, -1, -1, -1, 7, 9, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1},
  {-1, 4, -1, -1, -1, -1, 11, 0, -1, -1, 3, 2, -1, 8, -1, 1, -1, -1, -1, 12, 5, -1, -1, 7, -1, -1, -1, -1, -1, -1, -1, 9},
  {4, -1, 13, 0, 7, 1, -1, -1, 2, -1, -1, 11, -1, -1, -1, 5, 9, 14, -1, -1, -1, -1, 3, 15, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, -1, -1, 3, -1, 1, 4, -1, -1, 7, -1, 13, 12, -1, 2, -1, 9, 11, -1, 8, 5, 6, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1},
  {6, -1, -1, 5, 10, 1, 7, -1, 0, 8, -1, -1, 14, -1, -1, -1, 12, 4, -1, 2, -1, 15, -1, 11, -1, 13, -1, -1, -1, -1, -1, -1},
  {0, 9, 11, 2, 10, 1, 3, -1, -1, -1, -1, 8, 6, -1, -1, -1, -1, -1, 7, 4, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, 5},
  {7, -1, -1, 5, 0, 1, 14, -1, 4, -1, -1, 6, -1, -1, -1, 2, 12, -1, -1, 9, -1, -1, 10, -1, -1, -1, -1, -1, 15, -1, -1, -1},
  {0, -1, -1, 14, 2, 4, 1, 3, 13, 10, -1, 11, 6, -1, -1, -1, -1, 9, 5, 12, -1, -1, 8, -1, 7, -1, -1, -1, -1, -1, -1, -1},
  {10, -1, 0, 12, -1, -1, -1, 6, 7, 14, -1, 5, 2, -1, 1, -1, -1, -1, 8, 11, -1, 13, -1, 15, -1, -1, 3, -1, -1, -1, -1, -1},
  {10, 9, 1, -1, 5, 6, 2, -1, 13, 0, 3, -1, -1, 4, 7, -1, -1, 15, -1, -1, 12, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, 2, 15, -1, -1, 4, -1, -1, 14, 1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, -1, 12, 2, -1, 3, 1, -1, -1, -1, -1, 11, 4, -1, -1, 7, 8, -1, -1, -1, 6, -1, -1, 10, -1, -1, -1, -1, 9, -1, -1, -1},
  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1},
  {1, -1, 0, -1, -1, 9, 4, -1, -1, 10, -1, 8, 3, -1, -1, -1, -1, 7, 6, 5, -1, -1, -1, 13, 12, -1, 11, -1, -1, -1, -1, -1},
  {5, -1, 6, 1, 0, 2, 4, -1, -1, -1, -1, 12, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, 8, 9, -1, 3, -1, -1, -1, -1, -1, 10}
};

static const int8_t chrs_by_chr_and_successor_id[MAX_CHR - MIN_CHR][16] = {
  {'s', '_', 'i', 'c', 'd', 'r', 'a', 'p', 'h', 't', 'e', '.', 'm', 'l', 'f', 'u'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'[', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'1', '0', '2', '_', '6', '3', '4', '5', '7', '8', 'E', '9', 'c', 'S', '-', 'C'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'o', 'a', 'l', 'h', 'e', 'N', 'A', 'r', 'K', '1', 'F', 'S', '2', '_', 'u', 'P'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'E', 'N', 'v', 'R', 'P', 'x', 'n', 'S', '1', 'L', 'l', 'D', 'O', '_', 'm', 'r'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'n', 'N', 'S', 'c', 't', 'm', 'D', 'P', 'd', 'T', 'F', 'i', 'C', 'K', 'L', 'Z'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'S', '3', '1', 'K', 'o', '7', 'a', '5', '6', 'e', '2', 'T', '8', 'P', '4', 'u'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'r', 'a', 'N', 'K', 'l', 'o', 'S', 'e', 'L', 'C', 'h', 'U', '1', 'B', 'i', 'v'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'_', 't', 'e', '1', '2', 'C', 'i', '3', '4', '0', '5', 'A', 'c', 'h', 'u', 'S'},
  {'r', 'o', 'a', 'y', 'i', 'e', '_', 'F', 'h', 'P', 'T', '0', 'S', 'M', 'K', 'p'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'P', 'C', 'S', 'A', 'N', 'M', '_', 'H', 'U', 'G', 'W', 'B', 'F', 'V', 'I', 'E'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'_', 'Z', '1', 'b', 'h', 'E', 'i', '.', 'c', 'd', 'S', 's', '9', 'p', 't', '2'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'t', 'l', 'r', 'n', 's', 'c', 'g', 'i', 'b', 'p', 'm', 'd', 'y', 'v', 'u', 'S'},
  {'l', 'a', 'C', 'j', 'u', 'o', 'e', 'i', 's', 'K', 'r', 'P', '1', 'y', 'E', 'b'},
  {'t', 'k', 'o', 'e', 'a', 'h', 'r', 'l', 'c', 'E', 'u', '_', 'i', 's', 'N', 'I'},
  {'e', 'i', 'a', '_', 'l', 'S', 'E', 'd', 'C', 'D', 'I', ':', 'A', 'P', 'R', 'o'},
  {'r', 's', 'n', 't', 'l', 'c', 'd', 'a', 'w', 'm', 'E', 'I', 'x', 'b', ':', ' '},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'e', 'i', 'r', 'n', 'a', 'I', 'E', 'g', 'h', 'u', 's', 'S', 'C', 'l', 'o', ':'},
  {'e', 'a', 'o', 'i', 'C', 'T', 'E', 'I', 'S', 't', 'r', '_', 'R', ':', 'O', 'P'},
  {'n', 'o', 't', 'e', 'c', 's', 'l', 'd', 'm', 'g', 'r', 'v', 'f', 'a', 'p', 'b'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'_', 'e', ':', 'E', 'i', 'C', 'I', 'u', 'S', 'a', 's', ' ', 'g', 'P', 'A', 'R'},
  {'e', 'o', 'l', 'i', 'a', 'p', 'u', 't', 'd', 'I', 'v', 'E', 'y', 'S', 's', ' '},
  {'e', 'a', 'p', 'o', 'i', 'm', 'b', 's', 'C', '1', ' ', 'u', 'E', 'S', 'A', ':'},
  {'t', 'g', 'd', 's', 'e', 'a', 'c', 'v', 'i', 'f', ' ', ':', 'n', 'E', 'I', 'C'},
  {'n', 'r', 'c', 'l', 'u', 'p', 'm', 'd', 'k', 't', 'y', 'w', 's', 'o', 'a', 'g'},
  {'e', 'l', 't', 'o', 'y', 'a', 'p', 'r', 'u', 'd', 'I', '_', 'h', 'i', 's', 'E'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'e', 'o', 'a', 'i', 'I', '_', ' ', 't', 'y', ':', 's', 'c', 'r', 'd', 'E', 'v'},
  {'t', 'e', 's', 'i', 'h', 'p', 'a', 'I', ':', 'c', 'o', 'E', ']', 'u', 'F', ' '},
  {'i', 'e', 'r', 'a', 'o', 'h', 'y', 's', '3', 'E', ' ', 'I', 't', 'C', 'S', 'u'},
  {'e', 't', 'n', 'r', 'l', 'p', 's', 'm', 'c', 'b', 'd', 'a', 'f', 'i', 'g', '2'},
  {'e', 'i', 'o', 'a', 'E', 'R', 'm', 'N', '1', 'v', 'P', 'S', '_', 'W', 'O', '2'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'_', 'p', 'E', ' ', ':', 'S', 'n', 'l', 'I', 'V', 'e', 'C', 'o', 'b', 's', 'P'}
};

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable: 4324)    // structure was padded due to __declspec(align())
#endif

typedef struct Pack {
  const uint32_t word;
  const unsigned int bytes_packed;
  const unsigned int bytes_unpacked;
  const unsigned int offsets[8];
  const int16_t _ALIGNED masks[8];
  const char header_mask;
  const char header;
} Pack;

#ifdef _MSC_VER
#pragma warning(pop)
#endif

#define PACK_COUNT 3
#define MAX_SUCCESSOR_N 7

static const Pack packs[PACK_COUNT] = {
  { 0x80000000, 1, 2, { 26, 24, 24, 24, 24, 24, 24, 24 }, { 15, 3, 0, 0, 0, 0, 0, 0 }, 0xc0, 0x80 },
  { 0xc0000000, 2, 4, { 25, 22, 19, 16, 16, 16, 16, 16 }, { 15, 7, 7, 7, 0, 0, 0, 0 }, 0xe0, 0xc0 },
  { 0xe0000000, 4, 8, { 23, 19, 15, 11, 8, 5, 2, 0 }, { 31, 15, 15, 15, 7, 7, 7, 3 }, 0xf0, 0xe0 }
};
